# Expérimentations numériques à faire ici.
# Vous pouvez utiliser le package Plots pour les affichages de courbes: using Plots
include("../src/gct.jl")
include("../src/cauchy.jl")
include("../src/regions_de_confiance.jl")
include("../test/fonctions_de_tests.jl")
using Plots


_,_,_,_,xs_c = regions_de_confiance(fct1, grad_fct1, hess_fct1, pts1.x011, algo_pas="cauchy")
_,_,_,_,xs_gct = regions_de_confiance(fct1, grad_fct1, hess_fct1, pts1.x011, algo_pas="gct")

x1_c_value = [x[1] for x in xs_c]
x2_c_value= [x[2] for x in xs_c]
x3_c_value= [x[3] for x in xs_c]
plot3d(x1_c_value, x2_c_value, x3_c_value, label = "Cauchy", marker=:circle)

x1_gct_value = [x[1] for x in xs_gct]
x2_gct_value= [x[2] for x in xs_gct]
x3_gct_value= [x[3] for x in xs_gct]
plot3d!(x1_gct_value, x2_gct_value, x3_gct_value, label = "GCT", marker=:square)




include("../src/gct.jl")
include("../src/cauchy.jl")
include("../src/regions_de_confiance.jl")
include("../test/fonctions_de_tests.jl")
using Plots


fct3(x) = (x[1]/4)^2 + (x[2]/6)^2
grad_fct3(x) =[2/16*x[1] ; 2/36*x[2]]
hessfct3(x) =[2/16 0;0 2/36]
x031 = [1.3;1.5] 

_,_,_,_,xs_c = regions_de_confiance(fct3, grad_fct3, hessfct3, x031, algo_pas="cauchy")
_,_,_,_,xs_gct = regions_de_confiance(fct3, grad_fct3, hessfct3, x031, algo_pas="gct", max_iter_gct = 1)

x1_c_value = [x[1] for x in xs_c]
x2_c_value= [x[2] for x in xs_c]
plot(x1_c_value, x2_c_value, label = "Cauchy", marker=:circle)

x1_gct_value = [x[1] for x in xs_gct]
x2_gct_value= [x[2] for x in xs_gct]
plot!(x1_gct_value, x2_gct_value, label = "GCT", marker=:square, markersize=:5, alpha=:0.3)

include("../src/regions_de_confiance.jl")
include("../test/fonctions_de_tests.jl")
using Plots


# γ1
γ1_value = 0:0.05:1
nb_iters_γ1 = []
for i in γ1_value
    _,_,_,nb_iters_rc,_ = regions_de_confiance(fct2, grad_fct2, hess_fct2, x021, algo_pas="cauchy", γ1 = i)
    nb_iters_γ1 = vcat(nb_iters_γ1, [nb_iters_rc])
end
courbe_γ1 = plot(γ1_value, nb_iters_γ1, xlabel = "γ1", ylabel = "nombre d'itérations", title = "L'influence du paramètre γ1", legend = false)

# γ2
γ2_value = 1:0.05:2
nb_iters_γ2 = []
for i in γ2_value
    _,_,_,nb_iters_rc,_ = regions_de_confiance(fct2, grad_fct2, hess_fct2, x021, algo_pas="cauchy", γ2 = i)
    nb_iters_γ2 = vcat(nb_iters_γ2, [nb_iters_rc])
end
courbe_γ2 = plot(γ2_value, nb_iters_γ2, xlabel = "γ2", ylabel = "", title = "L'influence du paramètre γ2", legend = false)

# f1
γ1_f1_value = 0:0.05:1
nb_iters_f1_γ1 = []
for i in γ1_value
    _,_,_,nb_iters_rc,_ = regions_de_confiance(fct1, grad_fct1, hess_fct1, x011, algo_pas="cauchy", γ1 = i)
    nb_iters_f1_γ1 = vcat(nb_iters_f1_γ1, [nb_iters_rc])
end
courbe_γ1_f1 = plot(γ1_f1_value, nb_iters_f1_γ1, xlabel = "γ1", ylabel = "", title = "L'influence du paramètre γ1 de f1", legend = false)

# f2
γ1_f2_value = 0:0.05:1
nb_iters_f2_γ1 = []
for i in γ1_value
    _,_,_,nb_iters_rc,_ = regions_de_confiance(fct2, grad_fct2, hess_fct2, x021, algo_pas="cauchy", γ1 = i)
    nb_iters_f2_γ1 = vcat(nb_iters_f2_γ1, [nb_iters_rc])
end
courbe_γ1_f2 = plot(γ1_f2_value, nb_iters_f2_γ1, xlabel = "γ1", ylabel = "nombre d'itérations", title = "L'influence du paramètre γ1 de f2", legend = false)

# η1
nb_test = 100
η1_value = range(0.01,0.74,length=nb_test)
nb_iters_η1 = zeros(nb_test)
for i in 1:nb_test
    _,_,_,nb_iters_η1[i],_ = regions_de_confiance(fct2, grad_fct2, hess_fct2, x021, algo_pas="cauchy", η1 = η1_value[i])
end
courbe_η1 = plot(η1_value, nb_iters_η1, xlabel = "η1", ylabel = "nombre d'itérations", title = "L'influence du paramètre η1", legend = false)

# η2
η2_value = range(0.75,1,length=nb_test)
nb_iters_η2 = zeros(nb_test)
for i in 1:nb_test
    _,_,_,nb_iters_η2[i],_ = regions_de_confiance(fct2, grad_fct2, hess_fct2, x021, algo_pas="cauchy", max_iter = 8000, η2 = η2_value[i])
end
courbe_η2 = plot(η2_value, nb_iters_η2, xlabel = "η2", ylabel = "", title = "L'influence du paramètre η2", legend = false)

plot(courbe_γ1, courbe_γ2, courbe_γ1_f2, courbe_γ1_f1, courbe_η1, courbe_η2, layout=(3,2), size = (900, 1200))
